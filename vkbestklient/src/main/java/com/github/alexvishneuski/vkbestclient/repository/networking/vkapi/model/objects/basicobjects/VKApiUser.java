package com.github.alexvishneuski.vkbestclient.repository.networking.vkapi.model.objects.basicobjects;


import com.google.gson.annotations.SerializedName;

/**
 * model for VK API
 * object User
 * https://vk.com/dev/objects/user
 */
public class VKApiUser {

    /*basic fields*/

    //id integer идентификатор пользователя
    @SerializedName("id")
    private Integer mId;

    //first_name string	имя
    @SerializedName("first_name")
    private String mFirstName;

    //last_name string	фамилия
    @SerializedName("last_name")
    private String mLastName;

    //deactivated string поле возвращается,
    // если страница пользователя удалена или заблокирована,
    // содержит значение deleted или banned.
    // В этом случае опциональные поля не возвращаются.
    @SerializedName("deactivated")
    private String mDeactivatedFlag;

    // hidden integer	возвращается 1 при вызове без access_token,
    // если пользователь установил настройку «Кому в интернете видна моя страница»
    // — «Только пользователям ВКонтакте».
    // В этом случае опциональные поля не возвращаются.
    @SerializedName("hidden")
    private Integer mHiddenFlag;


    /*optional fields*/

    //photo_50 string url квадратной фотографии пользователя, имеющей ширину 50 пикселей.
    // В случае отсутствия у пользователя фотографии возвращается
    // https://vk.com/images/camera_50.png.
    @SerializedName("photo_50")
    private String mPhoto50;

    public Integer getId() {

        return mId;
    }

    public void setId(Integer pId) {
        mId = pId;
    }

    public String getFirstName() {

        return mFirstName;
    }

    public void setFirstName(String pFirstName) {
        mFirstName = pFirstName;
    }

    public String getLastName() {

        return mLastName;
    }

    public void setLastName(String pLastName) {
        mLastName = pLastName;
    }

    public String getDeactivatedFlag() {

        return mDeactivatedFlag;
    }

    public void setDeactivatedFlag(String pDeactivatedFlag) {
        mDeactivatedFlag = pDeactivatedFlag;
    }

    public Integer getHiddenFlag() {

        return mHiddenFlag;
    }

    public void setHiddenFlag(Integer pHiddenFlag) {
        mHiddenFlag = pHiddenFlag;
    }

    public String getPhoto50() {

        return mPhoto50;
    }

    public void setPhoto50(String pPhoto50) {
        mPhoto50 = pPhoto50;
    }

    @Override
    public String toString() {
        return "VKApiUser{" +
                "mId=" + mId +
                ", mFirstName='" + mFirstName + '\'' +
                ", mLastName='" + mLastName + '\'' +
                ", mDeactivatedFlag='" + mDeactivatedFlag + '\'' +
                ", mHiddenFlag=" + mHiddenFlag +
                ", mPhoto50='" + mPhoto50 + '\'' +
                '}';
    }

    /*

about string	содержимое поля «О себе» из профиля.

activities string	содержимое поля «Деятельность» из профиля.

bdate string	дата рождения. Возвращается в формате D.M.YYYY или D.M (если год рождения скрыт). Если дата рождения скрыта целиком, поле отсутствует в ответе.

blacklisted integer, [0,1]	информация о том, находится ли текущий пользователь в черном списке. Возможные значения:
1 — находится;
0 — не находится.

blacklisted_by_me integer, [0,1]	информация о том, находится ли пользователь в черном списке у текущего пользователя. Возможные значения:
1 — находится;
0 — не находится.

books string	содержимое поля «Любимые книги» из профиля пользователя.

can_post integer, [0,1]	информация о том, может ли текущий пользователь оставлять записи на стене. Возможные значения:
1 — может;
0 — не может.

can_see_all_posts integer, [0,1]	информация о том, может ли текущий пользователь видеть чужие записи на стене. Возможные значения:
1 — может;
0 — не может.

can_see_audio integer, [0,1]	информация о том, может ли текущий пользователь видеть аудиозаписи. Возможные значения:
1 — может;
0 — не может.

can_send_friend_request integer, [0,1]	информация о том, будет ли отправлено уведомление пользователю о заявке в друзья от текущего пользователя. Возможные значения:
1 — уведомление будет отправлено;
0 — уведомление не будет отправлено.

can_write_private_message integer, [0,1]	информация о том, может ли текущий пользователь отправить личное сообщение. Возможные значения:
1 — может;
0 — не может.

career object	информация о карьере пользователя.

city object	информация о городе, указанном на странице пользователя в разделе «Контакты»

common_count integer	количество общих друзей с текущим пользователем.

TODO create obj
connections	возвращает данные об указанных в профиле сервисах пользователя, таких как: skype, facebook, twitter, livejournal, instagram. Для каждого сервиса возвращается отдельное поле с типом string, содержащее никнейм пользователя. Например, "instagram": "username".

TODO create obj
contacts object	информация о телефонных номерах пользователя. Если данные указаны и не скрыты настройками приватности, возвращаются следующие поля:
mobile_phone (string) — номер мобильного телефона пользователя (только для Standalone-приложений);
home_phone (string) — дополнительный номер телефона пользователя.

TODO create obj
counters
object	количество различных объектов у пользователя. Поле возвращается только в методе users.get при запросе информации об одном пользователе, с передачей access_token.
Объект, содержащий следующие поля:
albums (integer) — количество фотоальбомов;
videos (integer) — количество видеозаписей;
audios (integer) — количество аудиозаписей;
photos (integer) — количество фотографий;
notes (integer) — количество заметок;
friends (integer) — количество друзей;
groups (integer) — количество сообществ;
online_friends (integer) — количество друзей онлайн;
mutual_friends (integer) — количество общих друзей;
user_videos (integer) — количество видеозаписей с пользователем;
followers (integer) — количество подписчиков;
pages (integer) — количество объектов в блоке «Интересные страницы».

TODO create obj
country
object	информация о стране, указанной на странице пользователя в разделе «Контакты». Возвращаются следующие поля:
id (integer) — идентификатор страны, который можно использовать для получения ее названия с помощью метода database.getCountriesById;
title (string) — название страны.

TODO create obj
crop_photo
object	возвращает данные о точках, по которым вырезаны профильная и миниатюрная фотографии пользователя.
TODO create obj
photo (object) — объект photo фотографии пользователя, из которой вырезается главное фото профиля.
TODO create obj
crop (object) — вырезанная фотография пользователя. Содержит следующие поля:
x (number) — координата X левого верхнего угла в процентах;
y (number) — координата Y левого верхнего угла в процентах;
x2 (number) — координата X правого нижнего угла в процентах;
y2 (number) — координата Y правого нижнего угла в процентах.
TODO create obj
rect (object) — миниатюрная квадратная фотография, вырезанная из фотографии crop. Содержит набор полей, аналогичный объекту crop.

domain
string	короткий адрес страницы. Возвращается строка, содержащая короткий адрес страницы (например, andrew). Если он не назначен, возвращается "id"+user_id, например, id35828305.

TODO create obj
education	информация о высшем учебном заведении пользователя. Возвращаются поля:
university (integer) — идентификатор университета;
university_name (string) — название университета;
faculty (integer) — идентификатор факультета;
faculty_name (string)— название факультета;
graduation (integer) — год окончания.

TODO create obj
exports	внешние сервисы, в которые настроен экспорт из ВК (twitter, facebook, livejournal, instagram).

first_name_{case} string	имя в заданном падеже. Возможные значения для {case}:
nom — именительный;
gen — родительный;
dat — дательный;
acc — винительный;
ins — творительный;
abl — предложный.
В запросе можно передать несколько значений

followers_count integer	количество подписчиков пользователя.

friend_status integer	статус дружбы с пользователем. Возможные значения:
0 — не является другом,
1 — отправлена заявка/подписка пользователю,
2 — имеется входящая заявка/подписка от пользователя,
3 — является другом.

games string	содержимое поля «Любимые игры» из профиля.

TODO Integer???
has_mobile	информация о том, известен ли номер мобильного телефона пользователя. Возвращаемые значения: 1 — известен, 0 — не известен.

has_photo integer, [0,1]	1, если пользователь установил фотографию для профиля.

home_town string	название родного города.

interests string	содержимое поля «Интересы» из профиля.

is_favorite integer, [0,1]	информация о том, есть ли пользователь в закладках у текущего пользователя. Возможные значения:
1 — есть;
0 — нет.

is_friend integer, [0,1]	информация о том, является ли пользователь другом текущего пользователя. Возможные значения:
1 — да;
0 — нет.

is_hidden_from_feed integer, [0,1]	информация о том, скрыт ли пользователь из ленты новостей текущего пользователя. Возможные значения:
1 — да;
0 — нет.

last_name_{case} string	фамилия в заданном падеже. Возможные значения для {case}:
nom — именительный;
gen — родительный;
dat — дательный;
acc — винительный;
ins — творительный;
abl — предложный.

TODO create obj
last_seen object	время последнего посещения. Объект, содержащий следующие поля:
time (integer) — время последнего посещения в формате Unixtime.
platform (integer) — тип платформы. Возможные значения:
1 — мобильная версия;
2 — приложение для iPhone;
3 — приложение для iPad;
4 — приложение для Android;
5 — приложение для Windows Phone;
6 — приложение для Windows 10;
7 — полная версия сайта;
8 — VK Mobile.

lists string	разделенные запятой идентификаторы списков друзей, в которых состоит пользователь. Поле доступно только для метода friends.get.

maiden_name string	девичья фамилия.

TODO create obj
military object	информация о военной службе пользователя. Объект, содержащий следующие поля:
unit (string) — номер части;
unit_id (integer) — идентификатор части в базе данных;
country_id (integer) — идентификатор страны, в которой находится часть;
from (integer) — год начала службы;
until (integer) — год окончания службы.

movies string	содержимое поля «Любимые фильмы» из профиля пользователя.

music string	содержимое поля «Любимая музыка» из профиля пользователя.

nickname string	никнейм (отчество) пользователя.
строка

TODO create obj
occupation object	информация о текущем роде занятия пользователя. Объект, содержащий следующие поля:
type (string) — тип. Возможные значения:
work — работа;
school — среднее образование;
university — высшее образование.
id (integer) — идентификатор школы, вуза, сообщества компании (в которой пользователь работает);
name (string) — название школы, вуза или места работы;

online integer, [0,1]	информация о том, находится ли пользователь сейчас на сайте. Если пользователь использует мобильное приложение либо мобильную версию, возвращается дополнительное поле online_mobile, содержащее 1. При этом, если используется именно приложение, дополнительно возвращается поле online_app, содержащее его идентификатор.

TODO create obj
personal object	информация о полях из раздела «Жизненная позиция».
      political (integer) — политические предпочтения. Возможные значения:
1 — коммунистические;
2 — социалистические;
3 — умеренные;
4 — либеральные;
5 — консервативные;
6 — монархические;
7 — ультраконсервативные;
8 — индифферентные;
9 — либертарианские.
langs (array) — языки.
       religion (string) — мировоззрение.
      inspired_by (string) — источники вдохновения.
      people_main (integer) — главное в людях. Возможные значения:
1 — ум и креативность;
2 — доброта и честность;
3 — красота и здоровье;
4 — власть и богатство;
5 — смелость и упорство;
6 — юмор и жизнелюбие.
     life_main (integer) — главное в жизни. Возможные значения:
1 — семья и дети;
2 — карьера и деньги;
3 — развлечения и отдых;
4 — наука и исследования;
5 — совершенствование мира;
6 — саморазвитие;
7 — красота и искусство;
8 — слава и влияние;
        smoking (integer) — отношение к курению. Возможные значения:
1 — резко негативное;
2 — негативное;
3 — компромиссное;
4 — нейтральное;
5 — положительное.
        alcohol (integer) — отношение к алкоголю. Возможные значения:
1 — резко негативное;
2 — негативное;
3 — компромиссное;
4 — нейтральное;
5 — положительное.

TODO needn't to add, already has been used
photo_50 string	url квадратной фотографии пользователя, имеющей ширину 50 пикселей. В случае отсутствия у пользователя фотографии возвращается https://vk.com/images/camera_50.png.

photo_100 string	url квадратной фотографии пользователя, имеющей ширину 100 пикселей. В случае отсутствия у пользователя фотографии возвращается https://vk.com/images/camera_100.png.

photo_200_orig string	url фотографии пользователя, имеющей ширину 200 пикселей. В случае отсутствия у пользователя фотографии возвращается https://vk.com/images/camera_200.png.

photo_200 string	url квадратной фотографии пользователя, имеющей ширину 200 пикселей. Если у пользователя отсутствует фотография таких размеров, в ответе вернется https://vk.com/images/camera_200.png

photo_400_orig string	url фотографии пользователя, имеющей ширину 400 пикселей. Если у пользователя отсутствует фотография такого размера, в ответе вернется https://vk.com/images/camera_400.png.

photo_id string	строковый идентификатор главной фотографии профиля пользователя в формате {user_id}_{photo_id}, например, 6492_192164258. Обратите внимание, это поле может отсутствовать в ответе.

photo_max string	url квадратной фотографии пользователя с максимальной шириной. Может быть возвращена фотография, имеющая ширину как 200, так и 100 пикселей. В случае отсутствия у пользователя фотографии возвращается https://vk.com/images/camera_200.png.

photo_max_orig string	url фотографии пользователя максимального размера. Может быть возвращена фотография, имеющая ширину как 400, так и 200 пикселей. В случае отсутствия у пользователя фотографии возвращается https://vk.com/images/camera_400.png.

quotes string	любимые цитаты.

TODO create obj
relatives
array	список родственников текущего пользователя. Массив объектов, каждый из которых содержит поля:
id (integer) — идентификатор пользователя;
name (string) — имя родственника (в том случае, если родственник не является пользователем ВКонтакте, в этом случае id не возвращается);
type (string) — тип родственной связи. Возможные значения:
child — сын/дочь;
sibling — брат/сестра;
parent — отец/мать;
grandparent — дедушка/бабушка;
grandchild — внук/внучка.

relation integer	семейное положение пользователя. Возможные значения:
1 — не женат/не замужем;
2 — есть друг/есть подруга;
3 — помолвлен/помолвлена;
4 — женат/замужем;
5 — всё сложно;
6 — в активном поиске;
7 — влюблён/влюблена;
8 — в гражданском браке;
0 — не указано.
TODO create obj
Если в семейном положении указан другой пользователь, дополнительно возвращается объект relation_partner, содержащий id и имя этого человека.

TODO create obj
schools array	список школ, в которых учился пользователь. Массив объектов, описывающих школы. Каждый объект содержит следующие поля:
id (integer) — идентификатор школы;
country (integer) — идентификатор страны, в которой расположена школа;
city (integer) — идентификатор города, в котором расположена школа;
name (string) — наименование школы
year_from (integer) — год начала обучения;
year_to (integer) — год окончания обучения;
year_graduated (integer) — год выпуска;
class (string) — буква класса;
speciality (string) — специализация;
type (integer) — идентификатор типа;
type_str (string) — название типа. Возможные значения для пар type-typeStr:
0 — "школа";
1 — "гимназия";
2 —"лицей";
3 — "школа-интернат";
4 — "школа вечерняя";
5 — "школа музыкальная";
6 — "школа спортивная";
7 — "школа художественная";
8 — "колледж";
9 — "профессиональный лицей";
10 — "техникум";
11 — "ПТУ";
12 — "училище";
13 — "школа искусств".

screen_name string	короткое имя страницы пользователя.

sex integer, [0,1,2]	пол пользователя. Возможные значения:
1 — женский;
2 — мужской;
0 — пол не указан.

site
string	адрес сайта, указанный в профиле сайт пользователя.

status
string	статус пользователя. Возвращается строка, содержащая текст статуса, расположенного в профиле под именем пользователя. Если у пользователя включена опция «Транслировать в статус играющую музыку», будет возвращено дополнительное поле status_audio, содержащее информацию о транслируемой композиции.

timezone
integer	временная зона пользователя. Возвращается только при запросе информации о текущем пользователе.

trending
integer, [0,1]	информация о том, есть ли на странице пользователя «огонёк».

tv
string	любимые телешоу.

TODO create obj
universities
array	список вузов, в которых учился пользователь. Массив объектов, описывающих университеты. Каждый объект содержит следующие поля:
id (integer)— идентификатор университета;
country (integer) — идентификатор страны, в которой расположен университет;
city (integer) — идентификатор города, в котором расположен университет;
name (string) — наименование университета;
faculty (integer) — идентификатор факультета;
faculty_name (string) — наименование факультета;
chair (integer) — идентификатор кафедры;
chair_name (string) — наименование кафедры;
graduation (integer) — год окончания обучения;
education_form (string) — форма обучения;
education_status (string) — статус (например, «Выпускник (специалист)»).

verified integer, [0,1]	возвращается 1, если страница пользователя верифицирована, 0 — если нет.


*/
}
